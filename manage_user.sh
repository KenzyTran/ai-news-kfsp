#!/bin/bash

# Script qu·∫£n l√Ω ·ª©ng d·ª•ng kh√¥ng c·∫ßn sudo
cd "$(dirname "$0")"

COMMAND=${1:-help}

case $COMMAND in
    "start")
        echo "üöÄ Starting services..."
        ./start_api.sh
        ;;
    "stop")
        echo "üõë Stopping services..."
        ./stop_api.sh
        ;;
    "restart")
        echo "üîÑ Restarting services..."
        ./stop_api.sh
        sleep 2
        ./start_api.sh
        ;;
    "status")
        ./status_api.sh
        ;;
    "logs")
        echo "üìã Recent logs (last 50 lines):"
        echo "=== API Logs ==="
        if [ -f logs/api.log ]; then
            tail -50 logs/api.log
        else
            echo "No API logs found"
        fi
        echo ""
        echo "=== Ollama Logs ==="
        if [ -f logs/ollama.log ]; then
            tail -50 logs/ollama.log
        else
            echo "No Ollama logs found"
        fi
        ;;
    "test")
        echo "üß™ Testing API..."
        echo "Health check:"
        curl -s http://localhost:8000/health | python3 -m json.tool
        echo ""
        echo "Summarize test:"
        curl -X POST "http://localhost:8000/summarize" \
             -H "Content-Type: application/json" \
             -d '{"text": "ƒê√¢y l√† m·ªôt b√†i vi·∫øt tin t·ª©c d√†i v·ªÅ c√¥ng ngh·ªá AI. C√¥ng ngh·ªá tr√≠ tu·ªá nh√¢n t·∫°o ƒëang ph√°t tri·ªÉn r·∫•t nhanh v√† c√≥ nhi·ªÅu ·ª©ng d·ª•ng trong ƒë·ªùi s·ªëng."}' | python3 -m json.tool
        ;;
    "update")
        echo "üîÑ Updating application..."
        ./stop_api.sh
        
        # Pull latest code if using git
        if [ -d ".git" ]; then
            git pull
        fi
        
        # Update dependencies
        source venv/bin/activate
        pip install -r requirements.txt
        
        # Restart services
        ./start_api.sh
        ;;
    "clean")
        echo "üßπ Cleaning up..."
        ./stop_api.sh
        rm -f logs/*.pid
        rm -f logs/*.log
        echo "‚úÖ Cleanup completed"
        ;;
    *)
        echo "üéõÔ∏è  AI News API Management (No Sudo Version)"
        echo ""
        echo "Usage: bash manage_user.sh [command]"
        echo ""
        echo "Commands:"
        echo "  start     - Kh·ªüi ƒë·ªông services"
        echo "  stop      - D·ª´ng services"
        echo "  restart   - Kh·ªüi ƒë·ªông l·∫°i services"
        echo "  status    - Ki·ªÉm tra tr·∫°ng th√°i"
        echo "  logs      - Xem logs"
        echo "  test      - Test API"
        echo "  update    - C·∫≠p nh·∫≠t ·ª©ng d·ª•ng"
        echo "  clean     - D·ªçn d·∫πp logs v√† PID files"
        echo "  help      - Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n n√†y"
        ;;
esac
